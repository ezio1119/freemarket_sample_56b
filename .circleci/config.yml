version: 2.1
orbs:
  aws-ecr: circleci/aws-ecr@6.2.0
  aws-ecs: circleci/aws-ecs@0.0.11

jobs:
  test:
    machine:
      image: circleci/classic:latest
    steps:
      - checkout
      - run:
          name: Build Docker Image
          command: docker-compose -f docker-compose_test.yml build
      - run:
          name: docker-compose up
          command: |
            export RAILS_MASTER_KEY=${RAILS_MASTER_KEY} && \
            docker-compose -f docker-compose_test.yml up -d
      - run:
          name: install dockerize
          command: wget https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && sudo tar -C /usr/local/bin -xzvf dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && rm dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz
          environment:
            DOCKERIZE_VERSION: v0.3.0
      - run:
          name: Wait for DB
          command: dockerize -wait tcp://localhost:3306 -timeout 1m
      - run:
          name: "before_test: setup db"
          command: docker-compose run web rails db:create db:migrate RAILS_ENV=test
      - run:
          name: test
          command: docker-compose run web bundle exec rspec
      - run:
          name: docker-compose down
          command: docker-compose down


workflows:
  version: 2.1
  build_and_deploy:
    jobs:
      - test
      # - aws-ecr/build-and-push-image:
      #     requires:
      #       - test
      #     repo: ${MY_REPO_PREFIX}
      #     extra-build-args: --build-arg RAILS_MASTER_KEY=${RAILS_MASTER_KEY}
      #     filters:
      #       branches:
      #         only: circleci-setting
      # - aws-ecs/deploy-service-update:
      #     requires:
      #       - aws-ecr/build-and-push-image
      #     family: ${MY_APP_PREFIX}
      #     cluster-name: ${MY_APP_PREFIX}
      #     container-image-name-updates: 'container=${CONTAINER_NAME},tag=latest'